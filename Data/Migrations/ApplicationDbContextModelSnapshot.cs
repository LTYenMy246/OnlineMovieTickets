// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineMovieTicket.Data;

#nullable disable

namespace OnlineMovieTicket.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator().HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.BinhLuanModel", b =>
                {
                    b.Property<int>("MaBinhLuan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBinhLuan"));

                    b.Property<string>("MaNguoiBinhLuan")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MaPhim")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBinhLuan")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungBinhLuan")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenNguoiBinhLuan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaBinhLuan");

                    b.HasIndex("MaNguoiBinhLuan");

                    b.HasIndex("MaPhim");

                    b.ToTable("BinhLuan");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.ChiTietDatVeModel", b =>
                {
                    b.Property<int>("MaChiTietDatVe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTietDatVe"));

                    b.Property<decimal>("GiaVe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaDonDatVe")
                        .HasColumnType("int");

                    b.Property<int>("MaGheSuatChieu")
                        .HasColumnType("int");

                    b.HasKey("MaChiTietDatVe");

                    b.HasIndex("MaDonDatVe");

                    b.HasIndex("MaGheSuatChieu");

                    b.ToTable("ChiTietDatVe");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.DonDatVeModel", b =>
                {
                    b.Property<int>("MaDonDatVe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDonDatVe"));

                    b.Property<string>("MaNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDonDatVe");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("DonDatVe");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.GheModel", b =>
                {
                    b.Property<int>("MaGhe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGhe"));

                    b.Property<int>("MaPhong")
                        .HasColumnType("int");

                    b.Property<string>("TenGhe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaGhe");

                    b.HasIndex("MaPhong");

                    b.ToTable("Ghe");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.GheSuatChieuModel", b =>
                {
                    b.Property<int>("MaGheSuatChieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGheSuatChieu"));

                    b.Property<int>("MaGhe")
                        .HasColumnType("int");

                    b.Property<int>("MaSuatChieu")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThaiGhe")
                        .HasColumnType("bit");

                    b.HasKey("MaGheSuatChieu");

                    b.HasIndex("MaGhe");

                    b.HasIndex("MaSuatChieu");

                    b.ToTable("GheSuatChieu");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.NgayChieuModel", b =>
                {
                    b.Property<int>("MaNgayChieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNgayChieu"));

                    b.Property<DateOnly>("NgayChieu")
                        .HasColumnType("date");

                    b.HasKey("MaNgayChieu");

                    b.ToTable("NgayChieu");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.PhimModel", b =>
                {
                    b.Property<int>("MaPhim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhim"));

                    b.Property<string>("AnhPhim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DaoDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayKhoiChieu")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungPhim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuocGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPhim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThoiLuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TinhTrang")
                        .HasColumnType("bit");

                    b.Property<string>("TrailerPhim")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhim");

                    b.ToTable("Phim");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.PhongModel", b =>
                {
                    b.Property<int>("MaPhong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhong"));

                    b.Property<int>("MaRap")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongGhe")
                        .HasColumnType("int");

                    b.Property<string>("TenPhong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhong");

                    b.HasIndex("MaRap");

                    b.ToTable("PhongModel");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.RapModel", b =>
                {
                    b.Property<int>("MaRap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaRap"));

                    b.Property<string>("DiaChiRap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenRap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaRap");

                    b.ToTable("RapModel");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.SuKienModel", b =>
                {
                    b.Property<int>("MaSuKien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSuKien"));

                    b.Property<string>("AnhSuKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaPhim")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDangSuKien")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungSuKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenSuKien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSuKien");

                    b.HasIndex("MaPhim");

                    b.ToTable("SuKien");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.SuatChieuModel", b =>
                {
                    b.Property<int>("MaSuatChieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaSuatChieu"));

                    b.Property<decimal>("GiaVeSuatChieu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaNgayChieu")
                        .HasColumnType("int");

                    b.Property<int>("MaPhim")
                        .HasColumnType("int");

                    b.Property<int>("MaPhong")
                        .HasColumnType("int");

                    b.Property<int>("MaThoiGianChieu")
                        .HasColumnType("int");

                    b.HasKey("MaSuatChieu");

                    b.HasIndex("MaNgayChieu");

                    b.HasIndex("MaPhim");

                    b.HasIndex("MaPhong");

                    b.HasIndex("MaThoiGianChieu");

                    b.ToTable("SuatChieu");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.ThoiGianChieuModel", b =>
                {
                    b.Property<int>("MaThoiGianChieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThoiGianChieu"));

                    b.Property<TimeSpan>("ThoiGianChieu")
                        .HasColumnType("time");

                    b.HasKey("MaThoiGianChieu");

                    b.ToTable("ThoiGianChieu");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.AppNguoiDung", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Ho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AppNguoiDung");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.BinhLuanModel", b =>
                {
                    b.HasOne("OnlineMovieTicket.Models.AppNguoiDung", "NguoiBinhLuan")
                        .WithMany()
                        .HasForeignKey("MaNguoiBinhLuan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMovieTicket.Models.PhimModel", "Phim")
                        .WithMany()
                        .HasForeignKey("MaPhim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiBinhLuan");

                    b.Navigation("Phim");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.ChiTietDatVeModel", b =>
                {
                    b.HasOne("OnlineMovieTicket.Models.DonDatVeModel", "DonDatVe")
                        .WithMany()
                        .HasForeignKey("MaDonDatVe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMovieTicket.Models.GheSuatChieuModel", "GheSuatChieu")
                        .WithMany()
                        .HasForeignKey("MaGheSuatChieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DonDatVe");

                    b.Navigation("GheSuatChieu");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.DonDatVeModel", b =>
                {
                    b.HasOne("OnlineMovieTicket.Models.AppNguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.GheModel", b =>
                {
                    b.HasOne("OnlineMovieTicket.Models.PhongModel", "Phong")
                        .WithMany()
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phong");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.GheSuatChieuModel", b =>
                {
                    b.HasOne("OnlineMovieTicket.Models.GheModel", "Ghe")
                        .WithMany()
                        .HasForeignKey("MaGhe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMovieTicket.Models.SuatChieuModel", "SuatChieu")
                        .WithMany()
                        .HasForeignKey("MaSuatChieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ghe");

                    b.Navigation("SuatChieu");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.PhongModel", b =>
                {
                    b.HasOne("OnlineMovieTicket.Models.RapModel", "Rap")
                        .WithMany()
                        .HasForeignKey("MaRap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rap");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.SuKienModel", b =>
                {
                    b.HasOne("OnlineMovieTicket.Models.PhimModel", "Phim")
                        .WithMany()
                        .HasForeignKey("MaPhim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Phim");
                });

            modelBuilder.Entity("OnlineMovieTicket.Models.SuatChieuModel", b =>
                {
                    b.HasOne("OnlineMovieTicket.Models.NgayChieuModel", "NgayChieu")
                        .WithMany()
                        .HasForeignKey("MaNgayChieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMovieTicket.Models.PhimModel", "Phim")
                        .WithMany()
                        .HasForeignKey("MaPhim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMovieTicket.Models.PhongModel", "Phong")
                        .WithMany()
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineMovieTicket.Models.ThoiGianChieuModel", "ThoiGianChieu")
                        .WithMany()
                        .HasForeignKey("MaThoiGianChieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NgayChieu");

                    b.Navigation("Phim");

                    b.Navigation("Phong");

                    b.Navigation("ThoiGianChieu");
                });
#pragma warning restore 612, 618
        }
    }
}
